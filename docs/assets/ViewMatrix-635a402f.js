import{c as p,a as u,b as v}from"./mat4-f2f89396.js";import{B as w,O as M}from"./webgl-bef542ad.js";import{r as S,o as E,b as R,a as _,c as g}from"./index-21b15c9d.js";const F={__name:"ViewMatrix",setup(B){const c=S(null),h=()=>{const n=c.value,t=n.getBoundingClientRect(),e=p(t.width,t.height);return n.appendChild(e),{canvas:e,bounds:t}};class d{constructor(){this.attributes={},this.vertexCount=0}setAttribute(t,e){if(!["aPosition"].includes(t))throw new Error("An error occurred setAttribute");this.attributes[t]=e}setIndex(t){this.indices=t,this.vertexCount=t.length}init(t,e){this.processBuffers(t),this.processVertexAttrib(t,e)}processBuffers(t){const e=this.attributes,r={},s=t.ARRAY_BUFFER;let a=0;for(const[o,i]of Object.entries(e))o==="aPosition"&&(a=i.data.length/i.count),r[o]=this.createBuffer(t,s,i.data);this.buffers=r,this.vertexCount=a}processVertexAttrib(t,e){const{buffers:r,attributes:s}=this,a={};for(const[o,i]of Object.entries(r)){const{count:b}=s[o],A=t.getAttribLocation(e,o);a[o]={count:b,buffer:i,location:A}}this.vertexAttributesInfo=a}createBuffer(t,e,r){const s=t.createBuffer();return t.bindBuffer(e,s),t.bufferData(e,r,t.STATIC_DRAW),s}}class f{constructor(t){this.vertexSource=t.vertex,this.fragmentSource=t.fragment}init(t){this.program=this.createProgram(t)}createProgram(t){const{vertexSource:e,fragmentSource:r}=this,s=this.createShader(t,t.VERTEX_SHADER,e),a=this.createShader(t,t.FRAGMENT_SHADER,r),o=t.createProgram();if(t.attachShader(o,s),t.attachShader(o,a),t.linkProgram(o),t.getProgramParameter(o,t.LINK_STATUS))return o;throw t.deleteProgram(o),new Error("Unable to initialize the shader program")}createShader(t,e,r){const s=t.createShader(e);if(t.shaderSource(s,r),t.compileShader(s),t.getShaderParameter(s,t.COMPILE_STATUS))return s;throw t.deleteShader(s),new Error("An error occurred compiling the shaders")}}class m extends M{constructor(t){super(),this.geometry=t.geometry,this.shader=t.shader}init(t){const{shader:e,geometry:r}=this;e.init(t),r.init(t,e.program);const s=e.program;this.defaultUniforms={uModelMatrix:t.getUniformLocation(s,"uModelMatrix"),uViewMatrix:t.getUniformLocation(s,"uViewMatrix")}}render(t,e){this.computeModelMatrix(),t.useProgram(this.shader.program),this.updateAttributes(t),this.updateUniforms(t,e)}updateAttributes(t){const{vertexAttributesInfo:e}=this.geometry;for(const r of Object.values(e)){const{count:s,location:a,buffer:o}=r;t.bindBuffer(t.ARRAY_BUFFER,o),t.vertexAttribPointer(a,s,t.FLOAT,!1,0,0),t.enableVertexAttribArray(a)}}updateUniforms(t,e){const r=this.modelMatrix,s=this.defaultUniforms,{viewMatrix:a}=e;t.uniformMatrix4fv(s.uModelMatrix,!1,r),t.uniformMatrix4fv(s.uViewMatrix,!1,a)}}class l{constructor(t){const{canvas:e}=t;this.canvas=t.canvas;const r=e.getContext("webgl");if(this.gl=r,!r)throw new Error("WebGL not supported");this.viewMatrix=u()}setViewMatrix(t,e,r){const s=u();v(s,t,e,r),this.viewMatrix=s}drawElements(t){const e=this.gl;e.drawElements(e.TRIANGLES,t,e.UNSIGNED_SHORT,0)}drawArrays(t){const e=this.gl;e.drawArrays(e.TRIANGLES,0,t)}renderStart(){const{gl:t,canvas:e}=this;t.viewport(0,0,e.width,e.height),t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}renderScene(t){const{gl:e,viewMatrix:r}=this;t.render(e,{viewMatrix:r}),this.drawArrays(t.geometry.vertexCount)}render(t){this.renderStart(),this.renderScene(t)}}const x=n=>{const t=new d,e=new Float32Array([0,0,0,.5,.7,0]);t.setAttribute("aPosition",new w(e,2));const r=new m({geometry:t,shader:new f({vertex:`
        precision mediump float;
        attribute vec3 aPosition;
        uniform mat4 uModelMatrix;
        uniform mat4 uViewMatrix;
        void main() {
          gl_Position = uViewMatrix * uModelMatrix * vec4(aPosition, 1.0);
        }
      `,fragment:`
        precision mediump float;
        void main() {
          gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
        }
      `})});return r.init(n),r};return E(()=>{let n=null;const{canvas:t}=h(),e=new l({canvas:t}),r=x(e.gl);r.position.set(.1,.1,.3);const s=[0,.5,-.5],a=r.position.toArray(),o=[0,1,0];e.setViewMatrix(s,a,o);const i=()=>{r.rotateY(r.rotation.y+.01),e.render(r),n=window.requestAnimationFrame(i)};i(),R(()=>window.cancelAnimationFrame(n))}),(n,t)=>(_(),g("div",{ref_key:"boxElementRef",ref:c,class:"box"},null,512))}};export{F as default};
