import{c as v}from"./mat4-f2f89396.js";import{B as S}from"./webgl-bef542ad.js";import{r as p,o as E,a as R,c as _}from"./index-9023bf6a.js";const P={__name:"ModelCoord",setup(x){const i=p(null),u=()=>{const n=i.value,e=n.getBoundingClientRect(),t=v(e.width,e.height);return n.appendChild(t),{canvas:t,bounds:e}};class h{constructor(){this.attributes={},this.vertexCount=0}setAttribute(e,t){if(!["aPosition"].includes(e))throw new Error("An error occurred setAttribute");this.attributes[e]=t}setIndex(e){this.indices=e,this.vertexCount=e.length}init(e,t){this.processBuffers(e),this.processVertexAttrib(e,t)}processBuffers(e){const t=this.attributes,r={},s=e.ARRAY_BUFFER;let a=0;for(const[o,c]of Object.entries(t))o==="aPosition"&&(a=c.data.length/c.count),r[o]=this.createBuffer(e,s,c.data);this.buffers=r,this.vertexCount=a}processVertexAttrib(e,t){const{buffers:r,attributes:s}=this,a={};for(const[o,c]of Object.entries(r)){const{count:A}=s[o],l=e.getAttribLocation(t,o);a[o]={count:A,buffer:c,location:l}}this.vertexAttributesInfo=a}createBuffer(e,t,r){const s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,r,e.STATIC_DRAW),s}}class d{constructor(e){this.vertexSource=e.vertex,this.fragmentSource=e.fragment}init(e){this.program=this.createProgram(e)}createProgram(e){const{vertexSource:t,fragmentSource:r}=this,s=this.createShader(e,e.VERTEX_SHADER,t),a=this.createShader(e,e.FRAGMENT_SHADER,r),o=e.createProgram();if(e.attachShader(o,s),e.attachShader(o,a),e.linkProgram(o),e.getProgramParameter(o,e.LINK_STATUS))return o;throw e.deleteProgram(o),new Error("Unable to initialize the shader program")}createShader(e,t,r){const s=e.createShader(t);if(e.shaderSource(s,r),e.compileShader(s),e.getShaderParameter(s,e.COMPILE_STATUS))return s;throw e.deleteShader(s),new Error("An error occurred compiling the shaders")}}class f{constructor(e){this.geometry=e.geometry,this.shader=e.shader}init(e){const{shader:t,geometry:r}=this;t.init(e),r.init(e,t.program)}render(e){e.useProgram(this.shader.program),this.updateAttributes(e)}updateAttributes(e){const{vertexAttributesInfo:t}=this.geometry;for(const r of Object.values(t)){const{count:s,location:a,buffer:o}=r;e.bindBuffer(e.ARRAY_BUFFER,o),e.vertexAttribPointer(a,s,e.FLOAT,!1,0,0),e.enableVertexAttribArray(a)}}}class m{constructor(e){const{canvas:t}=e;this.canvas=e.canvas;const r=t.getContext("webgl");if(this.gl=r,!r)throw new Error("WebGL not supported")}drawElements(e){const t=this.gl;t.drawElements(t.TRIANGLES,e,t.UNSIGNED_SHORT,0)}drawArrays(e){const t=this.gl;t.drawArrays(t.TRIANGLES,0,e)}renderStart(){const{gl:e,canvas:t}=this;e.viewport(0,0,t.width,t.height),e.clearColor(0,0,0,1),e.clearDepth(1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)}renderScene(e){e.render(this.gl),this.drawArrays(e.geometry.vertexCount)}render(e){this.renderStart(),this.renderScene(e)}}const b=n=>{const e=new h,t=new Float32Array([0,0,0,.5,2,0]);e.setAttribute("aPosition",new S(t,2));const r=new f({geometry:e,shader:new d({vertex:`
        precision mediump float;
        attribute vec3 aPosition;
        void main() {
          gl_Position = vec4(aPosition, 1.0);
        }
      `,fragment:`
        precision mediump float;
        void main() {
          gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
        }
      `})});return r.init(n),r};return E(()=>{const{canvas:n}=u(),e=new m({canvas:n}),t=b(e.gl);e.render(t)}),(n,e)=>(R(),_("div",{ref_key:"boxElementRef",ref:i,class:"box"},null,512))}};export{P as default};
