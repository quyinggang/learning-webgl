import{c as E,a as c,p as P,d as R,b as _,t as y,r as T}from"./mat4-f2f89396.js";import{r as g,o as C,b as B,a as U,c as F}from"./index-21b15c9d.js";const V={__name:"Camera",setup(j){const h=g(null),m=()=>{const i=h.value,t=i.getBoundingClientRect(),e=E(t.width,t.height);return i.appendChild(e),{canvas:e,bounds:t}};class u{constructor(t=0,e=0,r=0){this.x=t,this.y=e,this.z=r}set(t,e,r){this.x=t,this.y=e,this.z=r}toArray(){const{x:t,y:e,z:r}=this;return[t,e,r]}}class d{constructor(){this.position=new u,this.rotation=new u,this.modelMatrix=c()}rotateX(t){this.rotation.x=t}rotateY(t){this.rotation.y=t}rotateZ(t){this.rotation.z=t}computeModelMatrix(){const{position:t,rotation:e}=this,r=[{axis:[1,0,0],rotation:e.x},{axis:[0,1,0],rotation:e.y},{axis:[0,0,1],rotation:e.z}],o=c();y(o,o,[t.x,t.y,t.z]);for(const s of r)T(o,o,s.rotation,s.axis);this.modelMatrix=o}}class f{constructor(t,e){this.data=t,this.count=e}}class x{constructor(){this.attributes={},this.vertexCount=0}setAttribute(t,e){if(!["aPosition"].includes(t))throw new Error("An error occurred setAttribute");this.attributes[t]=e}setIndex(t){this.indices=t,this.vertexCount=t.length}init(t,e){this.processBuffers(t),this.processVertexAttrib(t,e)}processBuffers(t){const e=this.attributes,r={},o=t.ARRAY_BUFFER;let s=0;for(const[a,n]of Object.entries(e))a==="aPosition"&&(s=n.data.length/n.count),r[a]=this.createBuffer(t,o,n.data);this.buffers=r,this.vertexCount=s}processVertexAttrib(t,e){const{buffers:r,attributes:o}=this,s={};for(const[a,n]of Object.entries(r)){const{count:w}=o[a],S=t.getAttribLocation(e,a);s[a]={count:w,buffer:n,location:S}}this.vertexAttributesInfo=s}createBuffer(t,e,r){const o=t.createBuffer();return t.bindBuffer(e,o),t.bufferData(e,r,t.STATIC_DRAW),o}}class l{constructor(t){this.vertexSource=t.vertex,this.fragmentSource=t.fragment}init(t){this.program=this.createProgram(t)}createProgram(t){const{vertexSource:e,fragmentSource:r}=this,o=this.createShader(t,t.VERTEX_SHADER,e),s=this.createShader(t,t.FRAGMENT_SHADER,r),a=t.createProgram();if(t.attachShader(a,o),t.attachShader(a,s),t.linkProgram(a),t.getProgramParameter(a,t.LINK_STATUS))return a;throw t.deleteProgram(a),new Error("Unable to initialize the shader program")}createShader(t,e,r){const o=t.createShader(e);if(t.shaderSource(o,r),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS))return o;throw t.deleteShader(o),new Error("An error occurred compiling the shaders")}}class p extends d{constructor(t){super(),this.geometry=t.geometry,this.shader=t.shader}init(t){const{shader:e,geometry:r}=this;e.init(t),r.init(t,e.program);const o=e.program;this.defaultUniforms={uModelMatrix:t.getUniformLocation(o,"uModelMatrix"),uViewMatrix:t.getUniformLocation(o,"uViewMatrix"),uProjectionMatrix:t.getUniformLocation(o,"uProjectionMatrix")}}render(t,e){this.computeModelMatrix(),t.useProgram(this.shader.program),this.updateAttributes(t),this.updateUniforms(t,e)}updateAttributes(t){const{vertexAttributesInfo:e}=this.geometry;for(const r of Object.values(e)){const{count:o,location:s,buffer:a}=r;t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(s,o,t.FLOAT,!1,0,0),t.enableVertexAttribArray(s)}}updateUniforms(t,e){const r=this.modelMatrix,o=this.defaultUniforms,{viewMatrix:s,projectionMatrix:a}=e;t.uniformMatrix4fv(o.uModelMatrix,!1,r),t.uniformMatrix4fv(o.uViewMatrix,!1,s),t.uniformMatrix4fv(o.uProjectionMatrix,!1,a)}}class M{constructor(t){this.fov=R(t.fov),this.aspect=t.aspect,this.near=t.near,this.far=t.far,this.viewMatrix=c(),this.projectionMatrix=c(),this.position=new u,this.lookAtTarget=new u,this.up=new u(0,1,0)}lookAt(t,e,r){this.lookAtTarget.set(t,e,r)}computeViewMatrix(){const{position:t,lookAtTarget:e,up:r}=this,o=c();_(o,t.toArray(),e.toArray(),r.toArray()),this.viewMatrix=o}}class A extends M{constructor(t){super(t),this.projectionMatrix=this.computeProjectionMatrix()}computeProjectionMatrix(){const{fov:t,aspect:e,near:r,far:o}=this,s=c();return P(s,t,e,r,o),s}}class v{constructor(t){const{canvas:e}=t;this.canvas=t.canvas;const r=e.getContext("webgl");if(this.gl=r,!r)throw new Error("WebGL not supported")}setCamera(t){this.camera=t}drawElements(t){const e=this.gl;e.drawElements(e.TRIANGLES,t,e.UNSIGNED_SHORT,0)}drawArrays(t){const e=this.gl;e.drawArrays(e.TRIANGLES,0,t)}renderStart(){const{gl:t,canvas:e}=this;t.viewport(0,0,e.width,e.height),t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}renderScene(t){const{gl:e,camera:r}=this,{viewMatrix:o,projectionMatrix:s}=r;t.render(e,{viewMatrix:o,projectionMatrix:s}),this.drawArrays(t.geometry.vertexCount)}render(t){this.renderStart(),this.renderScene(t)}}const b=i=>{const t=new x,e=new Float32Array([0,0,0,10,18,0]);t.setAttribute("aPosition",new f(e,2));const r=new p({geometry:t,shader:new l({vertex:`
        precision mediump float;
        attribute vec3 aPosition;
        uniform mat4 uModelMatrix;
        uniform mat4 uViewMatrix;
        uniform mat4 uProjectionMatrix;
        void main() {
          gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * vec4(aPosition, 1.0);
        }
      `,fragment:`
        precision mediump float;
        void main() {
          gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);
        }
      `})});return r.init(i),r};return C(()=>{let i=null;const{canvas:t}=m(),e=new v({canvas:t}),r=b(e.gl);r.position.set(0,0,-30);const o=t.clientWidth/t.clientHeight,s=new A({fov:45,aspect:o,near:.1,far:1e3});s.position.set(0,0,80),s.computeViewMatrix(),e.setCamera(s);const a=()=>{r.rotateY(r.rotation.y+.01),e.render(r),i=window.requestAnimationFrame(a)};a(),B(()=>window.cancelAnimationFrame(i))}),(i,t)=>(U(),F("div",{ref_key:"boxElementRef",ref:h,class:"box"},null,512))}};export{V as default};
